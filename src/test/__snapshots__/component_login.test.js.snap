// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Kiểm tra component phải render chính xác và không render các component con của nó 1`] = `
<div>
  <Modal
    modalClosed={[Function]}
    show={false}
  >
    <div>
      <FontAwesomeIcon
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              512,
              512,
              Array [],
              "f05a",
              "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z",
            ],
            "iconName": "info-circle",
            "prefix": "fas",
          }
        }
        inverse={false}
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        title=""
        transform={null}
      />
    </div>
    <button
      btnType="OK"
      clicked={[Function]}
    >
      OK
    </button>
  </Modal>
  <div
    style={
      Object {
        "backgroundColor": "#f7f7f7",
        "height": "100vh",
      }
    }
  >
    <Layout
      styles={
        Object {
          "borderRadius": "4px",
          "position": "relative",
          "top": "10%",
        }
      }
    >
      <div>
        <p>
          Đăng ký bằng Email
        </p>
        <input
          changed={[Function]}
          elementConfig={
            Object {
              "placeholder": "Email",
              "type": "email",
            }
          }
          elementType="input"
          key="email"
          label="Email"
          shouldValidate={
            Object {
              "isEmail": true,
              "required": true,
            }
          }
          status={true}
          touched={false}
          value=""
        />
        <input
          changed={[Function]}
          elementConfig={
            Object {
              "placeholder": "Mật khẩu",
              "type": "password",
            }
          }
          elementType="input"
          key="password"
          label="Mật khẩu"
          shouldValidate={
            Object {
              "isRequireLetterNumberSymbol": true,
              "minLength": 8,
              "required": true,
            }
          }
          status={true}
          touched={false}
          value=""
        />
        <br />
        <button
          btnType="PrimaryGreen"
          clicked={[Function]}
          css={
            Object {
              "maxWidth": "300px",
            }
          }
        >
          ĐĂNG KÝ
        </button>
        <button
          btnType="SecondaryGreen"
          clicked={[Function]}
          css={
            Object {
              "maxWidth": "300px",
            }
          }
        >
          ĐĂNG NHẬP
        </button>
      </div>
    </Layout>
  </div>
</div>
`;
